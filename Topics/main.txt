1. Pointers in C (completed)
2. How empty pointer throws error. (completed)
3. String concatenation. (completed)
4. Malloc based strings. (completed)
5. String to int conversion. (completed)
6. Int to string conversion (completed)
7. String compare. (completed)
8. String copy. (completed)
9. Malloc based array. (completed)
10. Assigning char to int and int to char directly without errors. (completed)
11. Functions, declaration of functions. (completed)
12. Global variables. (completed)
13. Learning variadic functions. (completed)
14. #include
15. #define
16. #if, #elseif
17. #endif
18. How .h and .c files work with each other, how to create our own .h/.c file library.
19. How Left shift works.
20. How "~=" can be used to toggle a bit.
21. Uint8_t, uint16_t, uint32_t, uint64_t.
22. Structs
23. Typedefs.
24. Use of "->" and "." to access struct members. 

Code(yourself) and run these logics: 
1. smallest number between 3 numbers. (completed)
2. Smallest between 15 numbers (using array). (completed)
3. Ascending order. (completed)
4. Descending order. (completed)
5. Fibonacci.   (completed)
6. Factorial.   (completed)
7. Addition of 10 numbers. (completed)
8. ATM withrawal program.
9. Writing & reading to/from a file.
10. Merge sort. (completed)
11. Insertion sort. (completed)
12. Creating right angled triangle pattern using "*"
13. Linked list.
14. Binary search. (completed)

Try building these logics by yourself without checking online code. We want expert logic building skills. Struggle hard. 

Micro-controller concepts:
1. GPIO
2. GPIO Alternate function
3. Digital vs Analog signals
4. D2A and A2D converters.
5. How to connect LED to an MCU(microcontroller)
6. UART
7. I2C
8. SPI
9. RS 232
10. MODBUS TCP. 

Internet Protocols:
1. TCP
2. HTTP
3. MQTT
4. OSI Model 

RTOS:
1. Multitasking
2. Scheduling
3. RTOS vs OS.
4. Semaphores
5. Mutex.